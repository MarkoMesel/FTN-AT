<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Command-line tools for Kubernetes: kubectl, stern, kubectx, kubens</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/tgIG_fkUxSA/" /><category term="Cloud" /><category term="Containers" /><category term="Kubernetes" /><category term="Windows" /><category term="cloud" /><category term="containers" /><category term="kubernetes" /><author><name>Don Schenck</name></author><id>https://developers.redhat.com/blog/?p=585347</id><updated>2019-05-27T07:00:35Z</updated><published>2019-05-27T07:00:35Z</published><content type="html">&lt;p&gt;If you&amp;#8217;ve ever worked with your hands, you know that you can&amp;#8217;t do the job right without the right tools. That adage carries over quite well to software development as well. The right tools can make the difference between success or failure, regardless of the underlying technology. In the &lt;a href="https://developers.redhat.com/blog/category/kubernetes/"&gt;Kubernetes&lt;/a&gt; ecosystem, more and more tools are being introduced as folks find ways to solve a common problem. This article looks are four of those tools.&lt;/p&gt; &lt;p&gt;&lt;span id="more-585347"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;kubectl&lt;/h2&gt; &lt;p&gt;The standard command-line tool for Kubernetes, you can perform all the operations of Kubernetes that are required. This is the starting point for any Kubernetes administration. &lt;a href="https://kubernetes.io/docs/reference/kubectl/overview/"&gt;kubectl&lt;/a&gt; is the command-line tool for Kubernetes and is under the stewardship of the &lt;a href="https://www.cncf.io/"&gt;Cloud Native Computing Foundation&lt;/a&gt;, which brings us Kubernetes.&lt;/p&gt; &lt;h3&gt;Installation on MacOS&lt;/h3&gt; &lt;pre&gt;brew install kubectl&lt;/pre&gt; &lt;h3&gt;Installation on Windows&lt;/h3&gt; &lt;pre&gt;choco install kubernetes-cli&lt;/pre&gt; &lt;p&gt;Seriously, if you&amp;#8217;re not using &lt;a href="https://chocolatey.org/"&gt;Chocolatey&lt;/a&gt; for your Windows machine, stop everything and install it now. A game I like to play is to try to install some software without even looking it up. I&amp;#8217;ll just type, say, &lt;code&gt;choco install notepad++&lt;/code&gt; at the command line and see what happens. Chocolatey is almost as good as real chocolate. Almost.&lt;/p&gt; &lt;h2&gt;stern&lt;/h2&gt; &lt;p&gt;Keeping with the Kubernetes nautical theme, stern is the tail end of a ship &amp;#8230; and a tool to display the tail end of logs for containers and multiple pods. In the true spirit of open source community, &lt;a href="https://github.com/wercker/stern/tree/master/stern"&gt;the stern project&lt;/a&gt; comes from Wercker (which was acquired by Oracle in 2017).&lt;/p&gt; &lt;p&gt;Stern is a gift because, rather than viewing an entire log to see what happened most recently, you can use stern to watch a log unfurl.&lt;/p&gt; &lt;h3&gt;Installation on MacOS&lt;/h3&gt; &lt;pre&gt;brew install stern&lt;/pre&gt; &lt;h3&gt;Installation on Windows&lt;/h3&gt; &lt;p&gt;The installer can be download from the &lt;a href="https://github.com/wercker/stern/releases"&gt;stern releases page&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;kubectx&lt;/h2&gt; &lt;p&gt;Kubectx is helpful for multi-cluster installations, where you need to switch context between one cluster and another. Rather than type a series of lengthy kubectl command, &lt;a href="https://github.com/ahmetb/kubectx"&gt;kubectx&lt;/a&gt; works it magic in one short command. It also allows you to alias a lengthy cluster name into an alias. For example (taken directly from the kubectx website), &lt;code&gt;kubectx eu=gke_ahmetb-samples-playground_europe-west1-b_dublin&lt;/code&gt; allows you to switch to that cluster by running &lt;code&gt;kubectx eu&lt;/code&gt;. Another slick trick is that kubectx remembers your previous context—much like the &amp;#8220;Previous&amp;#8221; button on a television remote—and allows you to switch back by running &lt;code&gt;kubectx -&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The kubectx blog is &lt;a href="https://ahmet.im/blog/kubectx/"&gt;here&lt;/a&gt;. Thank you to Googler Ahmet Alp Balkan—&lt;a href="https://github.com/ahmetb"&gt;ahmetb on GitHub&lt;/a&gt;—for the tool. The repo is &lt;a href="https://github.com/ahmetb/kubectx"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Installation on MacOS&lt;/h3&gt; &lt;pre&gt;brew install kubectx&lt;/pre&gt; &lt;h3&gt;Installation on Windows&lt;/h3&gt; &lt;p&gt;Because it&amp;#8217;s a Bash shell script, there is no kubectx for Windows. &lt;strong&gt;Do not despair&lt;/strong&gt;; GitHub user &lt;a href="https://github.com/thomasliddledba"&gt;thomasliddledba&lt;/a&gt; (Thomas Liddle) has created &lt;a href="https://github.com/thomasliddledba/kubectxwin"&gt;kubectxwin&lt;/a&gt;, which works with Windows. The download and build instructions are on the &lt;a href="https://github.com/thomasliddledba/kubectxwin"&gt;GitHub repo README page&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Hint:&lt;/strong&gt; Use PowerShell &lt;code&gt;Set-Alias kubectx kubectxwin&lt;/code&gt;&lt;/p&gt; &lt;h2&gt;kubens&lt;/h2&gt; &lt;p&gt;This script allows you to easily switch between Kubernetes namespaces. A simple &lt;code&gt;kubens foo&lt;/code&gt; will make &lt;code&gt;foo&lt;/code&gt; your active namespace. The simplicity of this tool is what makes it so appealing. It does one thing and does it well. Like kubectx, the dash (&amp;#8220;-&amp;#8220;) option returns you to the previous value.&lt;/p&gt; &lt;p&gt;Kudos, again, to Ahmet Alp Balkan for &lt;a href="https://github.com/ahmetb/kubectx/blob/master/kubens"&gt;kubens&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Installation on MacOS&lt;/h3&gt; &lt;p&gt;When you run &lt;code&gt;brew install kubectx&lt;/code&gt;, you get kubens with it. How&amp;#8217;s that for value?&lt;/p&gt; &lt;h3&gt;Installation on Windows&lt;/h3&gt; &lt;p&gt;Again, Thomas Liddle has come through with &lt;a href="https://github.com/thomasliddledba/kubenswin"&gt;kubenswin&lt;/a&gt;. The download and build instructions are available on the &lt;a href="https://github.com/thomasliddledba/kubenswin"&gt;GitHub repo README page&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Get your artisanal game on&lt;/h2&gt; &lt;p&gt;Get these four tools loaded on your development machine, and you&amp;#8217;ll be ready to build some amazing applications while navigating the Kubernetes waters with ease. Once again, the open source community comes through for developers looking to advance and grow.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F27%2Fcommand-line-tools-for-kubernetes-kubectl-stern-kubectx-kubens%2F&amp;#38;linkname=Command-line%20tools%20for%20Kubernetes%3A%20kubectl%2C%20stern%2C%20kubectx%2C%20kubens" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F27%2Fcommand-line-tools-for-kubernetes-kubectl-stern-kubectx-kubens%2F&amp;#38;linkname=Command-line%20tools%20for%20Kubernetes%3A%20kubectl%2C%20stern%2C%20kubectx%2C%20kubens" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F27%2Fcommand-line-tools-for-kubernetes-kubectl-stern-kubectx-kubens%2F&amp;#38;linkname=Command-line%20tools%20for%20Kubernetes%3A%20kubectl%2C%20stern%2C%20kubectx%2C%20kubens" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F27%2Fcommand-line-tools-for-kubernetes-kubectl-stern-kubectx-kubens%2F&amp;#38;linkname=Command-line%20tools%20for%20Kubernetes%3A%20kubectl%2C%20stern%2C%20kubectx%2C%20kubens" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F27%2Fcommand-line-tools-for-kubernetes-kubectl-stern-kubectx-kubens%2F&amp;#38;linkname=Command-line%20tools%20for%20Kubernetes%3A%20kubectl%2C%20stern%2C%20kubectx%2C%20kubens" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F27%2Fcommand-line-tools-for-kubernetes-kubectl-stern-kubectx-kubens%2F&amp;#38;linkname=Command-line%20tools%20for%20Kubernetes%3A%20kubectl%2C%20stern%2C%20kubectx%2C%20kubens" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F27%2Fcommand-line-tools-for-kubernetes-kubectl-stern-kubectx-kubens%2F&amp;#38;linkname=Command-line%20tools%20for%20Kubernetes%3A%20kubectl%2C%20stern%2C%20kubectx%2C%20kubens" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F27%2Fcommand-line-tools-for-kubernetes-kubectl-stern-kubectx-kubens%2F&amp;#38;linkname=Command-line%20tools%20for%20Kubernetes%3A%20kubectl%2C%20stern%2C%20kubectx%2C%20kubens" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F27%2Fcommand-line-tools-for-kubernetes-kubectl-stern-kubectx-kubens%2F&amp;#038;title=Command-line%20tools%20for%20Kubernetes%3A%20kubectl%2C%20stern%2C%20kubectx%2C%20kubens" data-a2a-url="https://developers.redhat.com/blog/2019/05/27/command-line-tools-for-kubernetes-kubectl-stern-kubectx-kubens/" data-a2a-title="Command-line tools for Kubernetes: kubectl, stern, kubectx, kubens"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/27/command-line-tools-for-kubernetes-kubectl-stern-kubectx-kubens/"&gt;Command-line tools for Kubernetes: kubectl, stern, kubectx, kubens&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/tgIG_fkUxSA" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;If you&amp;#8217;ve ever worked with your hands, you know that you can&amp;#8217;t do the job right without the right tools. That adage carries over quite well to software development as well. The right tools can make the difference between success or failure, regardless of the underlying technology. In the Kubernetes ecosystem, more and more tools [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/27/command-line-tools-for-kubernetes-kubectl-stern-kubectx-kubens/"&gt;Command-line tools for Kubernetes: kubectl, stern, kubectx, kubens&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/05/27/command-line-tools-for-kubernetes-kubectl-stern-kubectx-kubens/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">585347</post-id><dc:creator>Don Schenck</dc:creator><dc:date>2019-05-27T07:00:35Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/27/command-line-tools-for-kubernetes-kubectl-stern-kubectx-kubens/</feedburner:origLink></entry><entry><title>DevNation Federal brings open source to the Beltway</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/BXBs40jAsQ8/" /><category term="devnation" scheme="searchisko:content:tags" /><category term="events" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><author><name>John Osborne</name></author><id>searchisko:content:id:jbossorg_blog-devnation_federal_brings_open_source_to_the_beltway</id><updated>2019-05-25T07:00:26Z</updated><published>2019-05-25T07:00:26Z</published><content type="html">&lt;p&gt;On June 27th, Red Hat will not only be hosting one of the best technical gatherings of 2019, but it will be doing so in Washington D.C. — not San Francisco, Seattle, or &amp;#60;insert tech hub here&amp;#62;. &lt;a class="markup--anchor markup--p-anchor" href="https://www.redhat.com/en/events/devnation-federal-2019" target="_blank" rel="nofollow noopener noreferrer" data-href="https://www.redhat.com/en/events/devnation-federal-2019"&gt;DevNation Federal&lt;/a&gt; conference will bring together industry experts and key maintainers of popular open source projects in a one-day immersive conference for federal developers.&lt;span id="more-597687"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;In this article, I&amp;#8217;ll share some observations of how we got here. After making a tough decision to leave civil service in 2013, I started looking for my next career opportunity. After weighing several offers, I joined the Red Hat Public Sector team because I thought this was where I could have the biggest impact— helping federal agencies adopt modern technologies, methodologies, and practices.&lt;/p&gt; &lt;p&gt;At the time (and somewhat still to this day), there felt like a large dichotomy between industry trends in major tech hubs and the reality faced by the federal government in adopting new tools and methodologies. Many startup companies have a complete tabula rasa where they can adopt the latest languages/frameworks, implement DevOps practices, and often even experiment or build their own tools in house. The reality is that the federal government has a mountain of challenges in adopting cloud computing, AI/ML, or even methodologies like Agile and DevOps.&lt;/p&gt; &lt;p&gt;First, federal agencies have a very high percentage of existing legacy applications that were built in some cases decades ago. These systems cannot easily be rewritten. In some places, just “keeping the lights on” is a major challenge. Second, the U.S. Government has laws, such as &lt;a class="markup--anchor markup--p-anchor" href="https://en.wikipedia.org/wiki/Federal_Information_Security_Management_Act_of_2002" target="_blank" rel="nofollow noopener noreferrer" data-href="https://en.wikipedia.org/wiki/Federal_Information_Security_Management_Act_of_2002"&gt;FISMA&lt;/a&gt;, that govern the risk management framework that systems must go through before they can process federal data (Shameless plug: I did a lightning talk on this at &lt;a class="markup--anchor markup--p-anchor" href="https://twitter.com/kubernetesio/status/1075080848712511488" target="_blank" rel="nofollow noopener noreferrer" data-href="https://twitter.com/kubernetesio/status/1075080848712511488"&gt;KubeCon&lt;/a&gt;). Finally, most agencies outsource a large part of their software lifecycle to third parties, which can lead to a &lt;a class="markup--anchor markup--p-anchor" href="http://smart-future.org/effective-dod-acquisition-needs-less-noise-part-1/" target="_blank" rel="nofollow noopener noreferrer" data-href="http://smart-future.org/effective-dod-acquisition-needs-less-noise-part-1/"&gt;high noise environment&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;em class="markup--em markup--p-em"&gt;Despite all this, we are moving forward. The U.S. Government has some incredibly smart engineers, product managers, and leaders. Every agency I’ve ever visited has people acting as catalysts for positive change. People are motivated. They know they can make a difference right now.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Enter &lt;a class="markup--anchor markup--p-anchor" href="https://www.redhat.com/en/events/devnation-federal-2019" target="_blank" rel="nofollow noopener noreferrer" data-href="https://www.redhat.com/en/events/devnation-federal-2019"&gt;DevNation Federal&lt;/a&gt;. To help close this dichotomy between high-flying tech companies and federal agencies, the Red Hat Public Sector team decided to help organize an event that would bring catalysts for change in both ecosystems together to share ideas, collaborate, and move the ball forward. We wanted this to be an inclusive environment by making it free for all to attend, removing sales pitches, and even inviting companies with competing interests. To make this event as accessible as possible, we decided to bring it to Washington D.C.&lt;/p&gt; &lt;p&gt;This year will be our fourth year of DevNation Federal, and to accommodate the growth in interest, we will be moving to a new (and &lt;a class="markup--anchor markup--p-anchor" href="https://wharfintercontinentaldc.com/events/meetings/" target="_blank" rel="nofollow noopener noreferrer" data-href="https://wharfintercontinentaldc.com/events/meetings/"&gt;stunning&lt;/a&gt;) location at the InterContinental Hotel–The Wharf. This year&amp;#8217;s main stage speakers will include industry leaders such as Julia Ferriaoli (Google), Jun Rao (Confluent), Jibby Ayo-Ani (Welkin Health), Laura Thomson (Mozilla), Christian Posta (Solo), Dan Walsh (Red Hat), Jimmy Ray (Capital One) as well as leaders in the federal government such as Simmons Lough (USPTO) and Nic Chaillan (Air Force). We will also feature compelling lightning talks and high-value breakout sessions that help people solve real-world problems.&lt;/p&gt; &lt;p&gt;DevNation Federal is now less than two months away, and we’re not even done with announcements of amazing content; check out the &lt;a href="https://www.redhat.com/en/events/devnation-federal-2019"&gt;conference website&lt;/a&gt; to learn more. If you have any questions, reach out to me on Twitter &lt;a class="markup--user markup--p-user" href="https://medium.com/@OpenShiftFed" target="_blank" rel="noopener noreferrer" data-href="https://medium.com/@OpenShiftFed" data-anchor-type="2" data-user-id="bd904c58e634" data-action-value="bd904c58e634" data-action="show-user-card" data-action-type="hover"&gt;John Osborne&lt;/a&gt; or on &lt;a class="markup--anchor markup--p-anchor" href="https://www.linkedin.com/in/johnfosborneiii/" target="_blank" rel="nofollow noopener noreferrer" data-href="https://www.linkedin.com/in/johnfosborneiii/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;This event is complimentary but space is limited, so &lt;a href="https://www.redhat.com/en/events/devnation-federal-2019#register-anchor"&gt;register today&lt;/a&gt; to secure your space for the most innovative developer event D.C. has to offer for the public sector.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F25%2Fdevnation-federal-brings-open-source-to-the-beltway%2F&amp;#38;linkname=DevNation%20Federal%20brings%20open%20source%20to%20the%20Beltway" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F25%2Fdevnation-federal-brings-open-source-to-the-beltway%2F&amp;#38;linkname=DevNation%20Federal%20brings%20open%20source%20to%20the%20Beltway" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F25%2Fdevnation-federal-brings-open-source-to-the-beltway%2F&amp;#38;linkname=DevNation%20Federal%20brings%20open%20source%20to%20the%20Beltway" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F25%2Fdevnation-federal-brings-open-source-to-the-beltway%2F&amp;#38;linkname=DevNation%20Federal%20brings%20open%20source%20to%20the%20Beltway" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F25%2Fdevnation-federal-brings-open-source-to-the-beltway%2F&amp;#38;linkname=DevNation%20Federal%20brings%20open%20source%20to%20the%20Beltway" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F25%2Fdevnation-federal-brings-open-source-to-the-beltway%2F&amp;#38;linkname=DevNation%20Federal%20brings%20open%20source%20to%20the%20Beltway" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F25%2Fdevnation-federal-brings-open-source-to-the-beltway%2F&amp;#38;linkname=DevNation%20Federal%20brings%20open%20source%20to%20the%20Beltway" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F25%2Fdevnation-federal-brings-open-source-to-the-beltway%2F&amp;#38;linkname=DevNation%20Federal%20brings%20open%20source%20to%20the%20Beltway" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F25%2Fdevnation-federal-brings-open-source-to-the-beltway%2F&amp;#038;title=DevNation%20Federal%20brings%20open%20source%20to%20the%20Beltway" data-a2a-url="https://developers.redhat.com/blog/2019/05/25/devnation-federal-brings-open-source-to-the-beltway/" data-a2a-title="DevNation Federal brings open source to the Beltway"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/25/devnation-federal-brings-open-source-to-the-beltway/"&gt;DevNation Federal brings open source to the Beltway&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/BXBs40jAsQ8" height="1" width="1" alt=""/&gt;</content><summary>On June 27th, Red Hat will not only be hosting one of the best technical gatherings of 2019, but it will be doing so in Washington D.C. — not San Francisco, Seattle, or . DevNation Federal conference will bring together industry experts and key maintainers of popular open source projects in a one-day immersive conference for federal developers. In this article, I’ll share some observations of how ...</summary><dc:creator>John Osborne</dc:creator><dc:date>2019-05-25T07:00:26Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/25/devnation-federal-brings-open-source-to-the-beltway/</feedburner:origLink></entry><entry><title>Modern business logic tooling workshop, lab 4: Create a process</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zS4gaiYVyEU/" /><category term="developer" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="labs" scheme="searchisko:content:tags" /><category term="Red Hat Process Automation Manager" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-modern_business_logic_tooling_workshop_lab_4_create_a_process</id><updated>2019-05-24T07:00:26Z</updated><published>2019-05-24T07:00:26Z</published><content type="html">&lt;p&gt;Since starting to update the &lt;a href="https://bpmworkshop.gitlab.io/#/" target="_blank" rel="noopener noreferrer"&gt;free online rules and process automation workshops&lt;/a&gt; that showcase how to get started using modern business logic tooling, you&amp;#8217;ve come a long way with process automation. The updates started with moving from JBoss BPM  to Red Hat Decision Manager and from JBoss BPM Suite to Red Hat Process Automation Manager.&lt;/p&gt; &lt;p&gt;In previous labs, we showed &lt;a href="https://developers.redhat.com/blog/2018/12/19/modern-business-logic-tooling-workshop-lab-1-installation/"&gt;how to install Red Hat Decision Manager&lt;/a&gt; on your laptop, &lt;a href="https://developers.redhat.com/blog/2019/04/01/modern-business-logic-tooling-workshop-lab-2-create-a-new-project/"&gt;how to create a new project&lt;/a&gt;, and &lt;a href="https://developers.redhat.com/blog/2019/04/19/modern-business-logic-tooling-workshop-lab-3-create-a-domain-model/"&gt;how to create a domain model&lt;/a&gt;. This article highlights the newest lab update for Red Hat Process Automation Manager, where you learn to design a process. &lt;span id="more-598177"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s take a look at the lab, shall we?&lt;/p&gt; &lt;h3&gt;Lab 4: Create a process&lt;/h3&gt; &lt;p&gt;This lab is the latest step on learning to develop a process integration project. It&amp;#8217;s a step by step guide on how to design your first process.&lt;/p&gt; &lt;p&gt;The easiest way is to just &lt;a href="https://bpmworkshop.gitlab.io/rhpam/lab04.html" target="_blank" rel="noopener noreferrer"&gt;jump right into lab 4&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhpam/lab04.html"&gt;&lt;img class=" aligncenter size-full wp-image-598197 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/05/Screenshot-2019-05-17-at-13.47.37.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/05/Screenshot-2019-05-17-at-13.47.37.png" alt="" width="593" height="339" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/05/Screenshot-2019-05-17-at-13.47.37.png 593w, https://developers.redhat.com/blog/wp-content/uploads/2019/05/Screenshot-2019-05-17-at-13.47.37-300x172.png 300w" sizes="(max-width: 593px) 100vw, 593px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Comments or feedback on any part of the workshop that might not be clear, just reach out.&lt;/p&gt; &lt;p&gt;Stay tuned for the next lab update, coming soon!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F24%2Fmodern-business-logic-tooling-workshop-lab-4-create-a-process%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%204%3A%20Create%20a%20process" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F24%2Fmodern-business-logic-tooling-workshop-lab-4-create-a-process%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%204%3A%20Create%20a%20process" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F24%2Fmodern-business-logic-tooling-workshop-lab-4-create-a-process%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%204%3A%20Create%20a%20process" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F24%2Fmodern-business-logic-tooling-workshop-lab-4-create-a-process%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%204%3A%20Create%20a%20process" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F24%2Fmodern-business-logic-tooling-workshop-lab-4-create-a-process%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%204%3A%20Create%20a%20process" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F24%2Fmodern-business-logic-tooling-workshop-lab-4-create-a-process%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%204%3A%20Create%20a%20process" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F24%2Fmodern-business-logic-tooling-workshop-lab-4-create-a-process%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%204%3A%20Create%20a%20process" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F24%2Fmodern-business-logic-tooling-workshop-lab-4-create-a-process%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%204%3A%20Create%20a%20process" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F24%2Fmodern-business-logic-tooling-workshop-lab-4-create-a-process%2F&amp;#038;title=Modern%20business%20logic%20tooling%20workshop%2C%20lab%204%3A%20Create%20a%20process" data-a2a-url="https://developers.redhat.com/blog/2019/05/24/modern-business-logic-tooling-workshop-lab-4-create-a-process/" data-a2a-title="Modern business logic tooling workshop, lab 4: Create a process"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/24/modern-business-logic-tooling-workshop-lab-4-create-a-process/"&gt;Modern business logic tooling workshop, lab 4: Create a process&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zS4gaiYVyEU" height="1" width="1" alt=""/&gt;</content><summary>Since starting to update the free online rules and process automation workshops that showcase how to get started using modern business logic tooling, you’ve come a long way with process automation. The updates started with moving from JBoss BPM  to Red Hat Decision Manager and from JBoss BPM Suite to Red Hat Process Automation Manager. In previous labs, we showed how to install Red Hat Decision Ma...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-05-24T07:00:26Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/24/modern-business-logic-tooling-workshop-lab-4-create-a-process/</feedburner:origLink></entry><entry><title>Camel Rebirth with Subsecond Experiences</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/inzY4znROsk/camel-rebirth-with-subsecond-experiences.html" /><category term="Camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_ofbizian" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="Knative" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="serverless" scheme="searchisko:content:tags" /><author><name>Bilgin Ibryam</name></author><id>searchisko:content:id:jbossorg_blog-camel_rebirth_with_subsecond_experiences</id><updated>2019-05-23T10:33:07Z</updated><published>2019-05-23T10:33:00Z</published><content type="html">&lt;h4&gt;&lt;span style="font-weight: normal;"&gt;&lt;i&gt;This post was originally published &lt;a href="https://developers.redhat.com/blog/2019/05/20/subsecond-deployment-and-startup-of-apache-camel-applications/" target="_blank"&gt;here&lt;/a&gt;. &lt;/i&gt;&lt;i&gt;Check out my new &lt;a href="https://k8spatterns.io/" target="_blank"&gt;Kubernetes Patterns&lt;/a&gt; book and&amp;nbsp; follow me &lt;a href="http://twitter.com/bibryam" target="_blank"&gt;@bibryam&lt;/a&gt; for future blog posts.&lt;/i&gt;&lt;/span&gt;&lt;/h4&gt;&lt;h2&gt;A look at the past decade&lt;/h2&gt;The integration space is in constant change. There are many open source projects and closed source technologies that have not passed the test of time and disappeared from the middleware stacks for good. After a decade, Apache Camel is still here and becoming even stronger for the next decade of integration.&lt;br /&gt;&lt;h3&gt;Gang of Four for integration&lt;/h3&gt;Apache Camel started life as an implementation of the Enterprise Integration Patterns (&lt;a href="https://www.enterpriseintegrationpatterns.com/"&gt;EIP&lt;/a&gt;) book. Today, these patterns are the equivalent of the object-oriented Gang of Four Design Patterns but for messaging and integration domain. They are agnostic of programing language, platform, architecture, and provide a universal language, notation and description of the forces around fundamental messaging primitives.&lt;br /&gt;&lt;br /&gt;But Camel community did not stop with these patterns, and kept evolving and adding newer patterns from SOA, Microservices, Cloud Native and Serverless paradigms. As a result, Camel turned into a generic pattern based integration framework suitable for multiple architectures.&lt;br /&gt;&lt;h3&gt;Universal library consumption model&lt;/h3&gt;While the patterns gave the initial spark to Camel, its endpoints quickly became popular and turned into a universal protocol for using Java based integration libraries as connectors. Today, there are&lt;a href="http://camel.apache.org/components.html"&gt; hundreds&lt;/a&gt; of Java libraries that can be used as Camel connectors using the Camel endpoint notation. It takes a while to realize that Camel can also be used without the EIPs and the routing engine. It can act as a connector framework where all libraries are consumed as universal URIs without a need for understanding the library specific factories and configurations that vary widely across Java libraries.&lt;br /&gt;&lt;h3&gt;The right level of abstraction&lt;/h3&gt;When you talk to developers who have not used Camel in anger before, they will tell you that it is possible to do integration without Camel. And they are right about the 80% of the easy use cases, but not for the remaining 20% of the cases that can turn a project into a multi-year frustrating experience. What they do not realize yet is that without Camel, there are multiple manual ways of doing the same thing, but none are validated by the experience of hundreds of open source developers. And if you fast-forward a few years, 10s of different systems to integrate with, and 10s of developers coming and going, 100s of microservices, an integration project can quickly turn into a bespoke home-grown framework that nobody wants to work on. &lt;b&gt;Doing integration is easy, but doing good integration that will evolve and grow for many years, by many teams, is the hardest part&lt;/b&gt;. Camel addresses this challenge with universal patterns and connectors, combined with integration focused&lt;a href="https://developers.redhat.com/blog/2017/12/21/camel-dsl-choose/"&gt; DSLs&lt;/a&gt;, that have passed the test of time. Next time, if you think you don't need Camel, your are either thinking for short term gains, or you are not realizing yet how complex integration can become.&lt;br /&gt;&lt;h3&gt;Embracing change&lt;/h3&gt;It takes only a couple of painful experiences in large integration projects to start appreciating Camel. But Camel is not great only because it was started by and built on the works of great minds, it is great because it evolves thanks to the world's knowledge, shared through the open source model and its networking effects. Camel started as the routing layer in ESBs during SOA period with a lot of focus on XML, WS, JBI, OSGI etc, but then it quickly adapted for REST, Swagger, Circuit breakers, SAGAs, and Spring Boot in the Microservices era. And the world has not stopped there, with Docker and Kubernetes, and now Serverless architecture, Camel keeps embracing the change. That is because &lt;b&gt;Camel is written for integrating changing environments, and Camel itself grows and shines on change. Camel is a change enabling library for integration.&lt;/b&gt;&lt;br /&gt;&lt;h3&gt;Behind the scene engine&lt;/h3&gt;One of the Camel secret sauces is that it is a non-intrusive, unopinionated, small (5MB and getting smaller) integration library without any affinity where and how you consume it. If you notice, this is the opposite of an ESB as commonly Camel is confused with because of its extensive capabilities. Over the years, Camel has been used as the internal engine powering projects such as:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Apache ServiceMix ESB &lt;/li&gt;&lt;li&gt;Apache ActiveMQ&lt;/li&gt;&lt;li&gt;Talend ESB&lt;/li&gt;&lt;li&gt;JBoss Switchyard&lt;/li&gt;&lt;li&gt;JBoss Fuse Service Works&lt;/li&gt;&lt;li&gt;Red Hat Fuse&lt;/li&gt;&lt;li&gt;&lt;a href="https://syndesis.io/"&gt;Fuse Online/Syndesis&lt;/a&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;And many other frameworks mentioned&lt;a href="http://camel.apache.org/user-stories.html"&gt; here&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;You can use Camel standalone, embed it with Apache Tomcat, with Spring Boot starters, JBoss WildFly, Apache Karaf, Vert.x, &lt;a href="https://quarkus.io/extensions/"&gt;Quarkus&lt;/a&gt;, you name it. Camel doesn't care and it will bring superpowers to your project every time.&lt;br /&gt;&lt;h2&gt;Looking to the future&lt;/h2&gt;Nobody can tell how the ideal integration stack will look like in a decade, nor can I. But I will tell you about &lt;b&gt;two novelties coming into Apache Camel now&lt;/b&gt; (and to&lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/fuse"&gt; Red Hat Fuse&lt;/a&gt; later), and why they will have a noticeable positive effect for the developers and the business. &lt;b&gt;I call these changes as subsecond deployment and subsecond startup of Camel applications.&lt;/b&gt;&lt;br /&gt;&lt;h3&gt;Subsecond deployments to Kubernetes&lt;/h3&gt;There was a time when cloud-native meant different technologies. Today, after a few years of natural selection and consolidation in the industry, cloud-native means applications created specifically for Kubernetes and its ecosystem of projects around&lt;a href="https://www.cncf.io/"&gt; CNCF&lt;/a&gt;. Even with this definition, there are many shades of cloud-native, from running a monolithic non-scalable application in a container, to triggering a function that is fully embracing the cloud-native development and management practices. The Camel community has realized that Kubernetes is the next generation &lt;a href="https://developers.redhat.com/blog/2018/06/28/why-kubernetes-is-the-new-application-server/"&gt;application runtime&lt;/a&gt;, and it is steadily working on making Camel a Kubernetes native integration engine. &lt;b&gt;The same way Camel is a first-class citizen in OSGI containers, JEE application servers, other fat-jar runtimes, Camel is becoming a first-class citizen on Kubernetes, integrating deeply and benefiting from the resiliency and scalability offered by the platform. &lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Here are a few of the many enhancement efforts going on in this direction:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Deeper Kubernetes integration&lt;/b&gt; - Kubernetes API connector, full health-check API implementation for Camel subsystems, service discovery through a new ServiceCall EIP, configuration management using ConfigMaps. Then a set of application patterns with special handling on Kubernetes such as: clustered &lt;a href="https://www.nicolaferraro.me/2017/10/17/creating-clustered-singleton-services-on-kubernetes/"&gt;singleton routes&lt;/a&gt;, &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_fuse/7.2/html/fuse_on_openshift_guide/camel-spring-boot_xa"&gt;scalable XA transactions&lt;/a&gt; (because sometimes, you have to), SAGA pattern &lt;a href="https://www.nicolaferraro.me/2018/04/25/saga-pattern-in-apache-camel/"&gt;implementation&lt;/a&gt;, etc.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Cloud-native integrations&lt;/b&gt; - support for other cloud-native projects such as exposing&lt;a href="https://brunonetid.github.io/2017/11/27/camel-prometheus-openshift.html"&gt; Camel metrics for Prometheus&lt;/a&gt;, &lt;a href="https://medium.com/jaegertracing/using-jaeger-to-trace-an-apache-camel-application-2b8118efbb4d"&gt;tracing Camel routes&lt;/a&gt; through Jaeger, JSON formatted logging for log aggregation, etc.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Immutable runtimes&lt;/b&gt; - whether you use the minimalist immutable Karaf packaging, or Spring Boot, Camel is a first class citizen ready to put in a container image. There are also Spring Boot starter implementations for all Camel connectors, integration with routes, properties, converters, and whatnot.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Camel 3&lt;/b&gt; -&lt;a href="https://medium.com/@davsclaus/work-on-apache-camel-3-has-finally-started-e6a4276a95d5"&gt; is a fact&lt;/a&gt; and actively progressing. A big theme for Camel 3 is to make it more modular, smaller, with faster startup time, reactive, non-blocking and triple awesome. This is the groundwork needed to restructure Camel for the future cloud workloads.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Knative integration&lt;/b&gt; -&lt;a href="https://cloud.google.com/knative/"&gt; Knative&lt;/a&gt; is an effort started by Google in order to bring some order and standardization in the serverless world dominated by Amazon Lambda. And Camel is among the projects that &lt;a href="https://www.nicolaferraro.me/2018/12/10/camel-k-on-knative/"&gt;integrate&lt;/a&gt; with Knative primitives from early days and enhances the Knative ecosystem with hundreds of connectors acting as generic &lt;a href="https://knative.dev/development/eventing/samples/apache-camel-source/"&gt;event sources&lt;/a&gt;. &lt;b&gt;&amp;nbsp; &lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;And here is a real game-changer initiative:&lt;a href="https://www.nicolaferraro.me/2018/10/15/introducing-camel-k/"&gt; Camel-K&lt;/a&gt;&lt;/b&gt; (a.k.a deep Kubernetes integration for Camel) - we have seen that Camel is typically embedded into the latest modern runtime where it acts as the developer-friendly integration engine behind the scene. The same way Camel used to benefit from JEE services in the past for hot-deployment, configuration management, transaction management, etc, today Camel-K allows Camel runtime to benefit from Kubernetes features for high-availability, resiliency, self-healing, auto-scaling, and basically distributed application management in general. The way Camel-K achieves this is through a CLI and an &lt;a href="https://coreos.com/operators/"&gt;Operator&lt;/a&gt; where the latter is able to understand the Camel applications, its build time dependencies, runtime needs, and make intelligent choices from the underlying Kubernetes platform and its additional capabilities (from Knative, Istio, Openshift and others in the future). It can automate everything on the cluster such as picking the best suited container image, runtime management model and update them when needed. The CLI can automate the tasks that are on the developer machine such as observing the code changes and streaming those to the Kubernetes cluster, and printing the logs from the running Pods.&amp;nbsp; &lt;/li&gt;&lt;/ul&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-3UcmHi2Cdpo/XOZyFZyKTiI/AAAAAAAAM4A/Xw2zmakcZh85vZWmu4w0GRxHPY2WpO_KgCLcBGAs/s1600/image3-768x362.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="362" data-original-width="768" height="187" src="https://1.bp.blogspot.com/-3UcmHi2Cdpo/XOZyFZyKTiI/AAAAAAAAM4A/Xw2zmakcZh85vZWmu4w0GRxHPY2WpO_KgCLcBGAs/s400/image3-768x362.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div dir="ltr" style="line-height: 1.38; margin-bottom: 12pt; margin-left: 36pt; margin-top: 12pt; text-align: center;"&gt;&lt;i&gt;Camel route auto-deployment to Kubernetes with Camel-K&lt;/i&gt;&lt;/div&gt;Camel-K operator understands two domains: Kubernetes and Camel. By combining knowledge of both areas, it can automate tasks that usually require a human operator. &lt;br /&gt;The really powerful part is that, with Camel-K, a Camel route can be built and deployed from source code to a running Camel route on Kubernetes in less than a second! &lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-1u9WX10coKw/XOZyMNwJP7I/AAAAAAAAM4E/sXODEhFtNFAXG3XZoxgYtdk3XkEYYGKzgCLcBGAs/s1600/image2-768x475.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="475" data-original-width="768" height="246" src="https://4.bp.blogspot.com/-1u9WX10coKw/XOZyMNwJP7I/AAAAAAAAM4E/sXODEhFtNFAXG3XZoxgYtdk3XkEYYGKzgCLcBGAs/s400/image2-768x475.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;i&gt;Time to deploy and run a Camel integration(in seconds)&lt;/i&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;i&gt;&amp;nbsp;&lt;/i&gt;&lt;/div&gt;Forget about making a coffee, or even having a sip while building and deploying a Camel route with Camel K. As soon as you make changes to your source code and open a browser, the Camel route will be running in Kubernetes. This has a noticeable impact on the way the developers write Camel code, compile, drink coffee, deploy and test. Apart from changing the development practices and habits, this toolset will significantly reduce the development cycles which would be noticed by the business stakeholders too. For live demonstration, check out the following awesome&lt;a href="https://www.youtube.com/watch?v=51x9BewGCYA"&gt; video&lt;/a&gt; from Fuse engineers working on Camel-K project.&lt;br /&gt;&lt;h3&gt;Subsecond startups of Camel applications&lt;/h3&gt;A typical enterprise integration landscape is composed of stateless services, stateful services, clustered applications, batch jobs, file transfers, messaging, real time integrations, and may be even&lt;a href="https://techcrunch.com/2019/02/05/blockchain-as-integration-evolution/"&gt; blockchain&lt;/a&gt; based business processes. To that mix, today, we also have to add serverless workloads as well, which is best suited for event driven workloads. Historically, the heavy and slow Java runtime had significant drawbacks compared Go, Javascript and other light runtimes in the serverless space. That is one of the main motivations for Oracle to create &lt;a href="https://github.com/oracle/graal/tree/master/substratevm"&gt;GraalVM/Substrate VM&lt;/a&gt;. Substrate VM is a framework that enables ahead-of-time (AOT) compilation of Java applications into native executables that are light and fast. Then a recent effort by Red Hat led to the &lt;a href="http://in.relation.to/2019/03/08/why-quarkus/"&gt;creation of Quarkus&lt;/a&gt; project which improves further the resource consumptions, startup and response times of Java applications mind-blowingly (a term not-used lightly here).&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-LK2KA0NbbTI/XOZyUPrgd8I/AAAAAAAAM4I/Ka5_2qH0KR0r7UHHtvKGY6Ygtnven8L2ACLcBGAs/s1600/image1-768x248.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="248" data-original-width="768" height="128" src="https://2.bp.blogspot.com/-LK2KA0NbbTI/XOZyUPrgd8I/AAAAAAAAM4I/Ka5_2qH0KR0r7UHHtvKGY6Ygtnven8L2ACLcBGAs/s400/image1-768x248.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;i&gt;Supersonic Subatomic Java with Quarkus&lt;/i&gt;&lt;/div&gt;&lt;div style="text-align: center;"&gt;&lt;i&gt;&amp;nbsp;&lt;/i&gt;&lt;/div&gt;As you can see from the metrics above, &lt;b&gt;Quarkus combined with SubstrateVM is not a gradual evolution. It is a mutation, and a revolutionary jump that suddenly changes the perspectives on the Java’s footprint and speed in the cloud native workloads. It makes Java friendly for serverless architecture. Considering the huge Java ecosystem composed of developers and libraries, it even turns Java into the best suited language for Serverless applications. And Camel &lt;a href="https://quarkus.io/extensions/"&gt;combined&lt;/a&gt; with Quarkus, the best placed integration library in this space.&lt;/b&gt;&lt;br /&gt;&lt;h2&gt;Summary&lt;/h2&gt;With the explosion of Microservices architecture, the number of services has increased tenfold which gave birth to Kubernetes-enabled architectures. These architectures are highly dynamic in nature, and most powerful with light and fast runtimes that enable instant scale up and higher deployment density.&lt;br /&gt;&lt;br /&gt;Camel is the framework to fill the space between disparate systems and services. It offers data consistency guarantees, reliable communication, failover, failure detection and recovery, and so on, in a way that makes developers productive. Now, &lt;b&gt;imagine the same powerful Apache Camel based integration in 2020 that: deploys to Kubernetes in 20ms; starts up in 20ms; requires 20MB memory, consumes 20MB on the disk... That is regardless whether it runs as a stateless application in a container, or as a function on KNative. That is 100x faster deployments to Kubernetes, 100x faster startup time, 10x less resource consumption allowing real-time scale-up, scale-down, and scale to zero. &lt;/b&gt;That is a change that the developers will notice during development, users will notice when using the system, and the business will notice on the infrastructure cost and overall delivery velocity. That is the real cloud-native era we have been waiting for.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/inzY4znROsk" height="1" width="1" alt=""/&gt;</content><summary>This post was originally published here. Check out my new Kubernetes Patterns book and  follow me @bibryam for future blog posts. A look at the past decadeThe integration space is in constant change. There are many open source projects and closed source technologies that have not passed the test of time and disappeared from the middleware stacks for good. After a decade, Apache Camel is still here...</summary><dc:creator>Bilgin Ibryam</dc:creator><dc:date>2019-05-23T10:33:00Z</dc:date><feedburner:origLink>http://www.ofbizian.com/2019/05/camel-rebirth-with-subsecond-experiences.html</feedburner:origLink></entry><entry><title>Data as a microservice: Distributed data-focused integration</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/q1Bh-9RuHM8/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><author><name>Hugo Guerrero</name></author><id>searchisko:content:id:jbossorg_blog-data_as_a_microservice_distributed_data_focused_integration</id><updated>2019-05-23T07:00:24Z</updated><published>2019-05-23T07:00:24Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/topics/microservices/"&gt;Microservices&lt;/a&gt; is the architecture design favored in new software projects; however, getting the most from this type of approach requires overcoming several previous requirements. As the evolution from a monolithic to a distributed system takes place not only in the application space but also at the data store, managing your data becomes one of the hardest challenges. This article examines some of the considerations for implementing data as a service.&lt;br /&gt; &lt;span id="more-598737"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;When following microservices design guidelines, we find references to data handling at several points. Some of those common directions include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Use private databases per service for loose coupling.&lt;/li&gt; &lt;li&gt;Embrace eventual consistency.&lt;/li&gt; &lt;li&gt;Implement &lt;a href="https://developers.redhat.com/blog/2018/10/01/patterns-for-distributed-transactions-within-a-microservices-architecture/"&gt;saga pattern&lt;/a&gt; for eventual consistency transactions.&lt;/li&gt; &lt;li&gt;Use &lt;a href="https://martinfowler.com/bliki/CQRS.html"&gt;Command Query Responsibility Segregation&lt;/a&gt; (CQRS) and API composition.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;With these points in mind, when targeting loose coupling as an essential piece in the architecture, shared databases now become an antipattern, making transactions and querying increase in difficulty. The use of datastores per service requires encapsulated data, whereas the interaction with other domains of the architecture should happen only at the API level, encouraging us to hide data implementation details. As a result, using lightweight frameworks like &lt;a href="https://developers.redhat.com/node/208305/"&gt;Spring Boot&lt;/a&gt; is just one of the first steps in the microservices journey.&lt;/p&gt; &lt;h2&gt;The query challenge&lt;/h2&gt; &lt;p&gt;Because we have data store per service, we need to make it available for consumption by other services becoming the entry point for this domain. As all the data calls happen at the service level and according to their domain, when a view of composite data is required, a traditional “table join” is no longer an option like we used to have in the shared database implementation. Additionally, we can not write a service that queries the private data stores and aggregates the data because it violates the encapsulation design.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter size-full wp-image-598747 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/05/Data-Integration.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/05/Data-Integration.png" alt="" width="959" height="336" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/05/Data-Integration.png 959w, https://developers.redhat.com/blog/wp-content/uploads/2019/05/Data-Integration-300x105.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/05/Data-Integration-768x269.png 768w" sizes="(max-width: 959px) 100vw, 959px" /&gt;&lt;/p&gt; &lt;p&gt;To solve the previous challenge, we need to bring back to the microservices architecture the use of well-established &lt;a href="https://www.enterpriseintegrationpatterns.com/"&gt;Enterprise Integration Patterns (EIP)&lt;/a&gt; like &lt;a href="https://www.enterpriseintegrationpatterns.com/patterns/messaging/DataEnricher.html"&gt;content enrichment&lt;/a&gt; and &lt;a href="https://www.enterpriseintegrationpatterns.com/patterns/messaging/Aggregator.html"&gt;aggregator&lt;/a&gt;. Most of the time, these patterns have been rebranded as &lt;i&gt;API composition pattern&lt;/i&gt; and commonly implemented in components like the API gateway.&lt;/p&gt; &lt;p&gt;In general, the API composition pattern involves the addition of another service, which makes the calls to the underlying data services with the required information to compose the required data view. As seen in the image below, it will first query the Customer Service for the basic information and then use that information to retrieve the history for this customer from the Payment Service.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter size-full wp-image-598757 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/05/Data-Integration-API-composition.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/05/Data-Integration-API-composition.png" alt="" width="312" height="382" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/05/Data-Integration-API-composition.png 312w, https://developers.redhat.com/blog/wp-content/uploads/2019/05/Data-Integration-API-composition-245x300.png 245w" sizes="(max-width: 312px) 100vw, 312px" /&gt;&lt;/p&gt; &lt;p&gt;At first glance, this looks like a simple composition task; however, the business typically requires more and more control of how the data is consumed and more logic is added to this type of services. Restrictions on the amount of data to be retrieved, permissions of the consuming end user, etc., are common business requirements, making the implementation of this type of service a full-time maintenance task.&lt;/p&gt; &lt;p&gt;On the other hand, the Command Query Responsibility Segregation (CQRS) tries to tackle the query challenge focusing on maintaining one or more materialized sets of data aggregated from multiple source events. As a result, the complexity of the system increases as an event bus is now a requirement. We will talk about this pattern in future articles.&lt;/p&gt; &lt;h2&gt;Distributed data integration&lt;/h2&gt; &lt;p&gt;As has been discussed before, the distributed nature of microservices makes service-to-service communications and service composition vital for a successful implementation. Trying to implement every service from the ground up in an ad hoc fashion, even though possible, is not always recommended, especially when specialized tools exist already and help us simplify the work.&lt;/p&gt; &lt;p&gt;In fact, making data available for external consumption through services is one example where coding everything from scratch is avoidable. We can expose data resting in different stores, not only relational databases using existing frameworks that help us implement the API composition pattern but also simple data-as-a-microservice services.&lt;/p&gt; &lt;p&gt;A distributed data-focused integration provides integrated access to data in any of its store implementations through a single uniform API. Data integration allows joining and unioning data even if the information resides in more than one type of sources beyond SQL or JDBC. Contrary to a database management system, it should not store any data but act as a “single point” interface to optimally access data sources.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter size-full wp-image-598767 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/05/Data-Integration-Multiple-Sources.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/05/Data-Integration-Multiple-Sources.png" alt="" width="636" height="411" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/05/Data-Integration-Multiple-Sources.png 636w, https://developers.redhat.com/blog/wp-content/uploads/2019/05/Data-Integration-Multiple-Sources-300x194.png 300w" sizes="(max-width: 636px) 100vw, 636px" /&gt;&lt;/p&gt; &lt;p&gt;Markedly, this type of framework should be compatible with the distributed nature of microservices. Hence, the engine and implementation should be lightweight and be able to be deployed as a container in cloud environments. Correspondingly, you should have the flexibility to execute standalone the components in runtimes like Spring Boot or embed it in your application.&lt;/p&gt; &lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;All things considered, going beyond building services in a microservice architecture involves the use of generally established practices like Enterprise Integration Patterns and Data Integration techniques. The ability to query different data sources and join them to expose meaningful information while providing a secure access layer in a lightweight and distributed way, can simplify your applications. And, as Christian Posta said &lt;a href="https://developers.redhat.com/blog/2016/08/02/the-hardest-part-about-microservices-your-data/"&gt;in his article&lt;/a&gt;, &amp;#8220;data, data integration, data boundaries, enterprise usage patterns, distributed systems theory, timing, etc, are all the hard parts of microservices (since microservices is really just distributed systems!).”&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F23%2Fdata-as-a-microservice-distributed-data-focused-integration%2F&amp;#38;linkname=Data%20as%20a%20microservice%3A%20Distributed%20data-focused%20integration" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F23%2Fdata-as-a-microservice-distributed-data-focused-integration%2F&amp;#38;linkname=Data%20as%20a%20microservice%3A%20Distributed%20data-focused%20integration" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F23%2Fdata-as-a-microservice-distributed-data-focused-integration%2F&amp;#38;linkname=Data%20as%20a%20microservice%3A%20Distributed%20data-focused%20integration" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F23%2Fdata-as-a-microservice-distributed-data-focused-integration%2F&amp;#38;linkname=Data%20as%20a%20microservice%3A%20Distributed%20data-focused%20integration" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F23%2Fdata-as-a-microservice-distributed-data-focused-integration%2F&amp;#38;linkname=Data%20as%20a%20microservice%3A%20Distributed%20data-focused%20integration" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F23%2Fdata-as-a-microservice-distributed-data-focused-integration%2F&amp;#38;linkname=Data%20as%20a%20microservice%3A%20Distributed%20data-focused%20integration" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F23%2Fdata-as-a-microservice-distributed-data-focused-integration%2F&amp;#38;linkname=Data%20as%20a%20microservice%3A%20Distributed%20data-focused%20integration" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F23%2Fdata-as-a-microservice-distributed-data-focused-integration%2F&amp;#38;linkname=Data%20as%20a%20microservice%3A%20Distributed%20data-focused%20integration" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F23%2Fdata-as-a-microservice-distributed-data-focused-integration%2F&amp;#038;title=Data%20as%20a%20microservice%3A%20Distributed%20data-focused%20integration" data-a2a-url="https://developers.redhat.com/blog/2019/05/23/data-as-a-microservice-distributed-data-focused-integration/" data-a2a-title="Data as a microservice: Distributed data-focused integration"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/23/data-as-a-microservice-distributed-data-focused-integration/"&gt;Data as a microservice: Distributed data-focused integration&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/q1Bh-9RuHM8" height="1" width="1" alt=""/&gt;</content><summary>Microservices is the architecture design favored in new software projects; however, getting the most from this type of approach requires overcoming several previous requirements. As the evolution from a monolithic to a distributed system takes place not only in the application space but also at the data store, managing your data becomes one of the hardest challenges. This article examines some of ...</summary><dc:creator>Hugo Guerrero</dc:creator><dc:date>2019-05-23T07:00:24Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/23/data-as-a-microservice-distributed-data-focused-integration/</feedburner:origLink></entry><entry><title>How To Setup Data Virtualization Tooling for CodeReady Studio 12</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/0j78YN5Z7iY/how-to-setup-data-virtualization-tooling-for-codeready-studio-12.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="CodeReadyStudio" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="JBossDV" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-how_to_setup_data_virtualization_tooling_for_codeready_studio_12</id><updated>2019-05-23T05:00:02Z</updated><published>2019-05-23T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-cIzb4fcReRw/XNwFlq25WXI/AAAAAAAAtqM/yPVnqcs3QXAmfg8cEEprq8kHtSkcQ2PAgCLcBGAs/s1600/codereadystudio.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="codeready studio" border="0" data-original-height="572" data-original-width="894" height="204" src="https://2.bp.blogspot.com/-cIzb4fcReRw/XNwFlq25WXI/AAAAAAAAtqM/yPVnqcs3QXAmfg8cEEprq8kHtSkcQ2PAgCLcBGAs/s320/codereadystudio.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;The release of the latest Red Hat developer suite version 12 brings with it a name change from Red Hat JBoss Developer Studio to Red Hat CodeReady Studio.&lt;br /&gt;&lt;br /&gt;The focus here is not on the Red Hat CodeReady Workspaces, a cloud and container development experience, but on the locally installed developers studio.&lt;br /&gt;&lt;br /&gt;The new release brings with it the questions around how to get started with the various Red Hat integration, data, and process automation product tool sets that are not installed out of the box.&lt;br /&gt;&lt;br /&gt;This series of articles continues to showcase how to install each set of tools and explains the products they are supporting. The hope is that an easy getting started experience helps you make informed decisions about the tooling you might want to use on your next development project.&lt;br /&gt;&lt;br /&gt;There are three different software packs that offer tooling for various Red Hat middleware technologies:&lt;br /&gt;&lt;ol style="text-align: left;"&gt;&lt;li&gt;&lt;a href="https://www.schabell.org/2019/05/how-to-setup-integration-tooling-for-codeready-studio-12.html" target="_blank"&gt;Red Hat Integration Development&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Red Hat Process Automation Development&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;b&gt;Red Hat Data Virtualization Development&lt;/b&gt;&lt;/i&gt;&lt;/li&gt;&lt;/ol&gt;This article will outline how to get started with the &lt;i&gt;Red Hat Data Virtualization&amp;nbsp;&lt;/i&gt;tooling with any of the CodeReady Studio version 12 releases.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-_Xjk5eintLw/XNwLjnHoA_I/AAAAAAAAtqY/MChzfpJXQFUWXh4R7OkYB1-hsJRWKUxBgCLcBGAs/s1600/Screenshot%2B2019-05-15%2Bat%2B14.49.36.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="codeready studio" border="0" data-original-height="597" data-original-width="1600" height="119" src="https://3.bp.blogspot.com/-_Xjk5eintLw/XNwLjnHoA_I/AAAAAAAAtqY/MChzfpJXQFUWXh4R7OkYB1-hsJRWKUxBgCLcBGAs/s320/Screenshot%2B2019-05-15%2Bat%2B14.49.36.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Overview of the development add-on tooling.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;Installation&lt;/h3&gt;Red Hat CodeReady Studio can be obtained through the &lt;a href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html" target="_blank"&gt;Customer Portal&lt;/a&gt;&amp;nbsp;(login required) or via the &lt;a href="https://developers.redhat.com/products/devstudio/download/" target="_blank"&gt;early access downloads on developers.redhat.com&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;After installation, start it up and you will see a welcoming &lt;i&gt;Red Hat Central&lt;/i&gt; tab with at the bottom a tab to look at the available tool sets labeled &lt;i&gt;Software/Update&lt;/i&gt;.&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: right;"&gt;&lt;/div&gt;&lt;div style="text-align: right;"&gt;&lt;/div&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-VdeKHOC6bn8/XNwVAN8KiNI/AAAAAAAAtrM/zKe1C9_QAWk7cfHHCxLYaWrBWp6JETUawCLcBGAs/s1600/Screenshot%2B2019-05-15%2Bat%2B14.55.34.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="codeready studio" border="0" data-original-height="830" data-original-width="1600" height="165" src="https://4.bp.blogspot.com/-VdeKHOC6bn8/XNwVAN8KiNI/AAAAAAAAtrM/zKe1C9_QAWk7cfHHCxLYaWrBWp6JETUawCLcBGAs/s320/Screenshot%2B2019-05-15%2Bat%2B14.55.34.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Selecting data virtualization tooling add-on.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;You will notice at the time of this writing that there are several options you can install found on the &lt;i&gt;Software/Update&lt;/i&gt; tab. Selecting the &lt;i&gt;Software/Update &lt;/i&gt;tab at the bottom reveals the Red Hat&amp;nbsp;&lt;i&gt;Development&amp;nbsp;&lt;/i&gt;tooling add-ons. Let's select &lt;i&gt;Red Hat Data Virtualization Development&lt;/i&gt;&amp;nbsp;check box.&lt;br /&gt;&lt;br /&gt;Note that if you previously installed any of these tooling add-ons, your list of options shall not include them all.&lt;br /&gt;&lt;br /&gt;Clicking on the&amp;nbsp;&lt;i&gt;Install/Update&lt;/i&gt;&amp;nbsp;button&amp;nbsp;starts the add-on installation and restarting the CodeReady Studio at the end completes the process.&lt;br /&gt;&lt;br /&gt;If you are interested in what is being installed, it can be examined by examining the pop-up listing of components and versions. Note this will change as the early access progresses towards final releases.&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: right;"&gt;&lt;/div&gt;&lt;div style="text-align: right;"&gt;&lt;/div&gt;&lt;div style="text-align: right;"&gt;&lt;/div&gt;&lt;table cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: right; margin-left: 1em; text-align: right;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-3rFo_ulqbcg/XNwVyAGcFSI/AAAAAAAAtrU/35URSXopetozsT5poBP-ZTQ-pGoHTfacQCLcBGAs/s1600/Screenshot%2B2019-05-15%2Bat%2B15.35.15.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: auto; margin-right: auto;"&gt;&lt;img alt="codeready studio" border="0" data-original-height="951" data-original-width="1474" height="206" src="https://2.bp.blogspot.com/-3rFo_ulqbcg/XNwVyAGcFSI/AAAAAAAAtrU/35URSXopetozsT5poBP-ZTQ-pGoHTfacQCLcBGAs/s320/Screenshot%2B2019-05-15%2Bat%2B15.35.15.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;Installing components.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Stay tuned for more articles in this series that will detail the installation of the remaining &lt;br /&gt;development add-on tooling.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Other options&lt;/h3&gt;See below for any development tooling needs on previous versions of the studio:&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;How To Setup Process Automation Tooling for CodeReady Studio 12&lt;/li&gt;&lt;li&gt;How To Setup Data Virtualization Tooling for CodeReady Studio 12&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.schabell.org/2019/05/how-to-setup-integration-tooling-for-codeready-studio-12.html" target="_blank"&gt;How To Setup Integration Tooling for CodeReady Studio 12&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2017/09/howto-setup-fuse-tooling-for-jbds11.html" target="_blank"&gt;How To Setup Fuse Tooling For JBoss Developer Studio 11&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2017/09/howto-setup-bpm-and-rules-tooling-for-jbds11.html" target="_blank"&gt;How To Setup BPM and Rules Tooling For JBoss Developer Studio 11&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2017/09/howto-setup-fuse-tooling-for-jbds11.html" target="_blank"&gt;How To Setup Integration and SOA Tooling For JBoss Developer Studio 11&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2016/10/howto-setup-fuse-tooling-for-jbds10.html" target="_blank"&gt;How To Setup Fuse Tooling For JBoss Developer Studio 10&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2016/10/howto-setup-bpm-and-rules-tooling-for-jbds10.html" target="_blank"&gt;How To Setup BPM and Rules Tooling For JBoss Developer Studio 10&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2016/10/howto-setup-data-virtualization-tooling-for-jbds10.html" target="_blank"&gt;How To Setup Data Virtualization Tooling For JBoss Developer Studio 10&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2016/11/howto-setup-integration-soa-tooling-for-jbds10.html" target="_blank"&gt;How To Setup Integration and SOA Tooling For JBoss Developer Studio 10&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2015/10/how-to-setup-fuse-tooling-for-jbds9.html" target="_blank"&gt;How To Setup Fuse Tooling For JBoss Developer Studio 9&amp;nbsp;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2015/10/how-to-setup-bpm-and-rules-tooling-for-jbds9.html" target="_blank"&gt;How To Setup&amp;nbsp;BPM&amp;nbsp;and Rules Tooling For&amp;nbsp;JBoss&amp;nbsp;Developer Studio 9&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2015/10/how-to-setup-soa5-tooling-for-jbds919.html" target="_blank"&gt;How To Setup Big Data Tooling For&amp;nbsp;JBoss&amp;nbsp;Developer Studio 9&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2015/10/how-to-setup-soa5-tooling-for-jbds9.html" target="_blank"&gt;How To Setup SOA 5.x Tooling For JBoss Developer Studio 9&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2015/10/how-to-setup-integration-and-soa-tooling-for-jbds9.html" target="_blank"&gt;How To Setup Integration &amp;amp; SOA Tooling For JBoss Developer Studio 9&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2014/11/how-to-setup-bpm-and-rules-tooling-for-jbds8.html" target="_blank"&gt;How To Setup BPM and Rules Tooling For JBoss Developer Studio 8&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2014/11/how-to-setup-big-data-tooling-for-jbds8.html" target="_blank"&gt;How To Setup Big Data Tooling For JBoss Developer Studio 8&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2014/11/how-to-setup-integration-and-soa-tooling-for-jbds8.html" target="_blank"&gt;How To Setup Integration &amp;amp; SOA Tooling For JBoss Developer Studio 8&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2014/11/how-to-setup-soa5-tooling-for-jbds8.html" target="_blank"&gt;How To Setup SOA 5.x Tooling For JBoss Developer Studio 8&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2013/04/jboss-developer-studio-7-how-to-setup.html" target="_blank"&gt;JBoss Developer Studio 7 - how to setup SOA Tools (BRMS example)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2013/04/jboss-developer-studio-6-how-to-setup.html" target="_blank"&gt;JBoss Developer Studio 6 - how to setup SOA Tools (BRMS example)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2013/01/jbds-bpmn2-modeler-howto-install.html" target="_blank"&gt;JBoss Developer Studio 5 - how to add Eclipse BPMN2 Modeler as jBPM designer&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2012/05/jboss-developer-studio-5-how-to-setup.html" target="_blank"&gt;JBoss Developer Studio 5 - how to setup SOA Tools (BRMS example)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2011/03/jboss-developer-studio-40-how-to-add_23.html" target="_blank"&gt;JBoss Developer Studio 4.0 - how to add native BPMN2 editor&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2011/03/jboss-developer-studio-40-how-to-add.html" target="_blank"&gt;&lt;span style="color: blue;"&gt;JBoss Developer Studio 4.0 - how to add native BPMN editor / Enterprise Architect Savara tooling&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="http://www.schabell.org/2011/02/jboss-developer-studio-40-how-to-add.html" target="_blank"&gt;&lt;span style="color: blue;"&gt;JBoss Developer Studio 4.0 - how to add tech preview BPEL tooling&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xf2mQTk5OZ4:-5gyO67_4tk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xf2mQTk5OZ4:-5gyO67_4tk:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xf2mQTk5OZ4:-5gyO67_4tk:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=xf2mQTk5OZ4:-5gyO67_4tk:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xf2mQTk5OZ4:-5gyO67_4tk:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=xf2mQTk5OZ4:-5gyO67_4tk:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xf2mQTk5OZ4:-5gyO67_4tk:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=xf2mQTk5OZ4:-5gyO67_4tk:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xf2mQTk5OZ4:-5gyO67_4tk:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=xf2mQTk5OZ4:-5gyO67_4tk:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=xf2mQTk5OZ4:-5gyO67_4tk:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/xf2mQTk5OZ4" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/0j78YN5Z7iY" height="1" width="1" alt=""/&gt;</content><summary>The release of the latest Red Hat developer suite version 12 brings with it a name change from Red Hat JBoss Developer Studio to Red Hat CodeReady Studio. The focus here is not on the Red Hat CodeReady Workspaces, a cloud and container development experience, but on the locally installed developers studio. The new release brings with it the questions around how to get started with the various Red ...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-05-23T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/xf2mQTk5OZ4/how-to-setup-data-virtualization-tooling-for-codeready-studio-12.html</feedburner:origLink></entry><entry><title>Getting Quarked</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/KiJuEE3YJSA/getting-quarked.html" /><category term="cloud" scheme="searchisko:content:tags" /><category term="english" scheme="searchisko:content:tags" /><category term="feed_group_name_jbossas" scheme="searchisko:content:tags" /><category term="feed_name_dimitris" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="native" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><category term="redhat" scheme="searchisko:content:tags" /><category term="subatomic" scheme="searchisko:content:tags" /><category term="supersonic" scheme="searchisko:content:tags" /><author><name>Dimitris Andreadis</name></author><id>searchisko:content:id:jbossorg_blog-getting_quarked</id><updated>2019-05-22T20:24:51Z</updated><published>2019-05-22T20:24:51Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://quarkus.io/" target="_blank"&gt;Quarkus&lt;/a&gt; has made its debut just two and half months ago on March 7th, 2019 with the release of &lt;a href="https://github.com/quarkusio/quarkus/releases/tag/0.11.0" target="_blank"&gt;version 0.11&lt;/a&gt; and this &lt;a href="https://developers.redhat.com/blog/2019/03/07/quarkus-next-generation-kubernetes-native-java-framework/" target="_blank"&gt;public announcement&lt;/a&gt;, and since then it has made a lot of &lt;a href="https://twitter.com/search?q=%23Quarkus&amp;amp;src=typed_query" target="_blank"&gt;buzz&lt;/a&gt; in the Java universe while attracting significant &lt;a href="https://twitter.com/parisjug/status/1128406629966336000" target="_blank"&gt;developer interest&lt;/a&gt;. This is still early days so most people are mostly in the experimental stage getting their feet wet and having a first taste of what it means to write Supersonic Subatomic Java apps. (And just in case you haven't heard of Quarkus check out this introductory &lt;a href="https://www.youtube.com/watch?v=7G_r1iyrn2c" target="_blank"&gt;video&lt;/a&gt;.)&lt;br /&gt;&lt;br /&gt;By some twist of luck the first public release of Quarkus came right out of the Red Hat Neuchâtel Office in Switzerland, the original JBoss HQ for Europe, where a large part of the very much distributed Quarkus engineering team was having a meeting that concluded with a release hackathon.&lt;br /&gt;&lt;br /&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="float: left; margin-right: 1em; text-align: left;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-FRGpSEqGhmo/XORyW884iQI/AAAAAAAAQWQ/PZZOnO8U1t8a7eygdKlqVPIYDtGk4wWUACLcBGAs/s1600/Quarkus-Team.JPG" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="1200" data-original-width="1600" height="300" src="https://1.bp.blogspot.com/-FRGpSEqGhmo/XORyW884iQI/AAAAAAAAQWQ/PZZOnO8U1t8a7eygdKlqVPIYDtGk4wWUACLcBGAs/s400/Quarkus-Team.JPG" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;History in the making - Quarkus about to be released to the public&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;Of course, Quarkus was not born there. For years various people and teams at Red Hat including the &lt;a href="https://wildfly.org/" target="_blank"&gt;WildFly&lt;/a&gt;/&lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/application-platform" target="_blank"&gt;EAP&lt;/a&gt; team with &lt;a href="https://docs.wildfly.org/galleon/" target="_blank"&gt;Galleon&lt;/a&gt;, as well as the sister &lt;a href="https://wildfly.org/news/2015/05/05/WildFly-Swarm-Released/" target="_blank"&gt;WildFly-Swarm&lt;/a&gt;/&lt;a href="https://thorntail.io/" target="_blank"&gt;Thorntailv4&lt;/a&gt; projects, the Drools team with &lt;a href="https://developers.redhat.com/blog/2019/03/14/quarking-drools-how-we-turned-a-13-year-old-java-project-into-a-first-class-serverless-component/" target="_blank"&gt;Submarine&lt;/a&gt;, the OpenJDK team and others, were experimenting with evolutionary approaches for reducing the runtime overhead of Java applications to make them more space and time efficient for cloud native deployments. &lt;br /&gt;&lt;br /&gt;However, at some point it became evident that evolutionary approaches wouldn't cut it for the order-of-magnitude scale improvements we were targeting so three of our most prominent architects, (alphabetically) &lt;a href="https://twitter.com/bobmcwhirter" target="_blank"&gt;Bob McWhirter&lt;/a&gt;, &lt;a href="https://twitter.com/emmanuelbernard" target="_blank"&gt;Emmanuel Bernard&lt;/a&gt; and &lt;a href="https://twitter.com/jtgreene" target="_blank"&gt;Jason Greene&lt;/a&gt; came together and with our &lt;a href="https://twitter.com/nmcl" target="_blank"&gt;CTO&lt;/a&gt;'s blessings started a Proof-of-Concept (initially stealth) effort that would attempt to unify the various research projects into one looking into revolutionary approaches for developing that one &lt;i&gt;single Runtime to rule them all&lt;/i&gt;.&lt;br /&gt;&lt;br /&gt;An interdisciplinary team of engineers &lt;a href="https://github.com/orgs/quarkusio/people" target="_blank"&gt;(non exaustive list)&lt;/a&gt; was gradually formed with each one bringing along with them a ton of ideas and experience from different areas of the Middleware/Enterprise Java spectrum, from kernel design and JVM internals to networking, security and persistence, integration frameworks and performance optimizations (and more). Within 3-4 months the team put in place the base architectural elements and design abstractions and delivered a prototype that satisfied the original goals but also went way beyond. It produced&amp;nbsp; innovations that will be studied and copied over for years to come and provided justification for the project to continue, eventually leading to its public announcement.&lt;br /&gt;&lt;br /&gt;The cool thing about Quarkus is that it works equally well in standard JVM and native compiled mode. By essentially pre-computing application and framework initialization and eliminating dead code (and performing many other optimizations) it can greatly reduce boot time, artifact size and runtime memory requirements (RSS space).&lt;br /&gt;&lt;br /&gt;In one sense things are moving to the opposite direction from the days of early JBoss. Back them we've disrupted the application server space by moving compile time operations into deployment time. With dynamic proxies, a plugable microkernel architecture and an aspect oriented/interceptor design we could avoid precompilation steps and do things you now take for granted like hot-deployment and instant-clustering. Even the collapse of the Web and EJB layers within the same JVM was a selling point. Now we go for extreme distribution with all the benefits and challenges that come with it.&lt;br /&gt;&lt;br /&gt;A very rough rule of thumb is that by using Quarkus in standard JVM mode you can expect your app to boot in a fifth of the time compared to most other popular runtimes and consume about half the memory. In native mode things go crazy: expect one to two orders of magnitude of reduced boot time (supersonic, in the order of tens of milliseconds) and about a fifth to a third of runtime memory consumption (subatomic).&lt;br /&gt;&lt;br /&gt;It's funny to see &lt;a href="https://twitter.com/dandreadis/status/1130798806428205062" target="_blank"&gt;people trying out Quarkus&lt;/a&gt; and reporting an impressive 1.65 seconds boot time for an app that would take 56 seconds to boot on Google Cloud and then the Quarkus team reacts because that looks "slow" and with DNS issues resolved the boot time should be closer to 0,015 seconds! To say it differently, beyond an awesome enabler for writing microservices, Java can now be used as a launching platform for serverless apps and cloud functions. Which in turn means that the millions of Java programmers in the world can keep using their favorite programming language, frameworks and APIs and carry forward their know-how in this brave new cloud native world, while companies can maintain their multi-year investments in Java. This is a game changer, IMO.&lt;br /&gt;&lt;br /&gt;However, to reap the full benefits of Quarkus, frameworks needs to be enabled for it, they need to be Quarked. The team has written extensions for popular frameworks/libraries (listed &lt;a href="https://quarkus.io/extensions/" target="_blank"&gt;here&lt;/a&gt;) that help provide Quarkus' opinionated programming model but our expectation is that the community will step up and provide their own extensions for popular frameworks in order to enhance the Quarkus ecosystem. With enough Quarkus extensions in place the benefits of Ahead of Time Compilation (AOT) will be offered to a larger percentage of the Java Developer base in a way that makes the production of native binaries almost transparent to the end user.&lt;br /&gt;&lt;br /&gt;Quarkus offers a lot more than a Supersonic speed, a Subatomic footprint and a set of best of breed technologies and standards. It provides both an imperative and a reactive &lt;a href="https://quarkus.io/vision/continuum" target="_blank"&gt;programming model&lt;/a&gt; and most importantly it brings back &lt;a href="https://quarkus.io/vision/developer-joy" target="_blank"&gt;developer joy&lt;/a&gt; in the life of the programmer. I've been in a couple of Quarkus presentations already and the moment we show how a code change in the IDE is immediately picked up by Quarkus in developer mode the next time the web browser gets refreshed with the change recompiled and the whole app redeployed *instantly*, that moment, the people's reaction is simply priceless. Back in the JBoss days our motto was to"put back the developer into the driver's seat". Same thing now with Quarkus. &lt;br /&gt;&lt;br /&gt;I hope that helps explains a bit some of the excitement behind Quarkus inside and outside Red Hat, and my own personal excitement, too, especially from the moment I was offered the opportunity to come and help run the extended Quarkus team as its Engineering Manager. I am humbled by the sheer amount of brain power behind the project, although, coming from the WildFly/EAP team this is not something new to me. I've seen a few times in my career the type of magic that can happen when you put exceptional people working together on a common stretched goal.&lt;br /&gt;&lt;br /&gt;Being a JBoss alumni and having worked on all transformations that the JBoss Application Server project underwent since version 2.x, I've delivered my last JBoss EAP 7.2 release as Engineering Manager while I was transitioning to Quarkus and handed over the product to &lt;a href="https://twitter.com/tom_jenkinson" target="_blank"&gt;Tom Jenkinson&lt;/a&gt; with whom I've I've worked in the EAP team for many years. Tom was Engineering Manager &amp;amp; Project Lead of the Nayarana Transactions Engine that powers all of JBoss Middleware, a project even older than JBoss AS.&lt;br /&gt;&lt;br /&gt;Tom in turn is supported by &lt;a href="https://twitter.com/bestansberry" target="_blank"&gt;Brian Stansberry&lt;/a&gt; in the role of WildFly project lead, as well as a great team of JBoss/WildFly veterans, so I'm confident that EAP is in the best hands possible to continue evolving and thriving, tracking the latest developments in the Jakarta EE / Microprofile space.&lt;br /&gt;&lt;br /&gt;This is all for now - stay tuned on &lt;a href="https://twitter.com/QuarkusIO" target="_blank"&gt;Quarkus&lt;/a&gt; - and &lt;a href="https://quarkus.io/community/" target="_blank"&gt;join&lt;/a&gt; the revolution. &lt;br /&gt;&lt;br /&gt;/&lt;a href="http://dandreadis.blogspot.com/" target="_blank"&gt;Dimitris&lt;/a&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/KiJuEE3YJSA" height="1" width="1" alt=""/&gt;</content><summary>Quarkus has made its debut just two and half months ago on March 7th, 2019 with the release of version 0.11 and this public announcement, and since then it has made a lot of buzz in the Java universe while attracting significant developer interest. This is still early days so most people are mostly in the experimental stage getting their feet wet and having a first taste of what it means to write ...</summary><dc:creator>Dimitris Andreadis</dc:creator><dc:date>2019-05-22T20:24:51Z</dc:date><feedburner:origLink>http://dandreadis.blogspot.com/2019/05/getting-quarked.html</feedburner:origLink></entry><entry><title>OpenJDK 8 and 11: Still in safe hands</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/D70ZAxenJUY/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="OpenJDK" scheme="searchisko:content:tags" /><author><name>Andrew Haley</name></author><id>searchisko:content:id:jbossorg_blog-openjdk_8_and_11_still_in_safe_hands</id><updated>2019-05-22T07:00:56Z</updated><published>2019-05-22T07:00:56Z</published><content type="html">&lt;p&gt;In 2018, Oracle announced that it would only provide free public updates and auto-updates of Java SE 8 for commercial users until the end of January 2019. Java 8 is a very important platform, used by millions of programmers, so this was a big deal. The Java community needed to fill the gap.&lt;span id="more-596727"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;In February of this year, I was appointed as the new Lead of the OpenJDK 8 Update Releases Project. A couple of weeks later, I was appointed the new Lead of the OpenJDK 11 Updates Project. This is an important milestone in the history of &lt;a href="https://developers.redhat.com/products/openjdk/overview/"&gt;OpenJDK&lt;/a&gt; and of &lt;a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html"&gt;Java SE&lt;/a&gt; because it&amp;#8217;s the first time that a non-Oracle employee has led the current long-term OpenJDK release project. JDK 8 is still a much-used Java release in industry, and &lt;a href="https://developers.redhat.com/blog/2018/12/10/install-java-rhel8/"&gt;JDK 11&lt;/a&gt; is the current long-term maintenance release.&lt;/p&gt; &lt;p&gt;It&amp;#8217;s now a couple of weeks after the first releases of JDK8u and JDK11u on my watch. I think the process went pretty well, although it was not entirely smooth sailing for the developers. Having said that, we got our releases out on the day, as planned, and so far we&amp;#8217;ve seen no major problems.&lt;/p&gt; &lt;p&gt;There had been a considerable amount of talk, some of it verging on panic, about Oracle ceasing to provide free long-term JDK update binaries to commercial users. At the time, I believed those worries were misplaced. Now, with these releases, I think we&amp;#8217;ve proved it.&lt;/p&gt; &lt;h3&gt;Red Hat&amp;#8217;s role&lt;/h3&gt; &lt;p&gt;Of course, I&amp;#8217;m not doing this on my own. We have a large team of OpenJDK developers within Red Hat and there are many non-Red Hatters working on the releases, too. There are also people doing highly confidential security work that you&amp;#8217;ll not see until it&amp;#8217;s ready.&lt;/p&gt; &lt;p&gt;It&amp;#8217;s important to clarify Red Hat&amp;#8217;s role in all of this. We are one of the largest contributors to OpenJDK, we have been for many years, and we will continue to be. However, we have not &amp;#8220;taken over&amp;#8221; OpenJDK updates projects, and neither would we want to. Our role in OpenJDK, as in many other projects, is to be a catalyst in communities of customers, contributors, and partners. This means that we work with others, some of whom are our competitors, in the best interests of the project. The changes Red Hat makes to OpenJDK updates are based on patches from many sources. We wrote many of them ourselves, of course, but we take them from all of the OpenJDK contributors.&lt;/p&gt; &lt;p&gt;My role in this as Project Lead is to supervise, encourage, and occasionally make decisions about how best to protect these precious jewels, the OpenJDK updates. I have to do so without favoring any vendor. Not only must I be impartial, but I must also be seen by everyone to be so. This way of behaving is in Red Hat&amp;#8217;s best interests: a better OpenJDK for everyone encourages more users and more contributors. In the end, the best outcome for Red Hat is the best outcome for everyone.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F22%2Fopenjdk-8-and-11-still-in-safe-hands%2F&amp;#38;linkname=OpenJDK%208%20and%2011%3A%20Still%20in%20safe%20hands" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F22%2Fopenjdk-8-and-11-still-in-safe-hands%2F&amp;#38;linkname=OpenJDK%208%20and%2011%3A%20Still%20in%20safe%20hands" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F22%2Fopenjdk-8-and-11-still-in-safe-hands%2F&amp;#38;linkname=OpenJDK%208%20and%2011%3A%20Still%20in%20safe%20hands" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F22%2Fopenjdk-8-and-11-still-in-safe-hands%2F&amp;#38;linkname=OpenJDK%208%20and%2011%3A%20Still%20in%20safe%20hands" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F22%2Fopenjdk-8-and-11-still-in-safe-hands%2F&amp;#38;linkname=OpenJDK%208%20and%2011%3A%20Still%20in%20safe%20hands" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F22%2Fopenjdk-8-and-11-still-in-safe-hands%2F&amp;#38;linkname=OpenJDK%208%20and%2011%3A%20Still%20in%20safe%20hands" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F22%2Fopenjdk-8-and-11-still-in-safe-hands%2F&amp;#38;linkname=OpenJDK%208%20and%2011%3A%20Still%20in%20safe%20hands" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F22%2Fopenjdk-8-and-11-still-in-safe-hands%2F&amp;#38;linkname=OpenJDK%208%20and%2011%3A%20Still%20in%20safe%20hands" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F05%2F22%2Fopenjdk-8-and-11-still-in-safe-hands%2F&amp;#038;title=OpenJDK%208%20and%2011%3A%20Still%20in%20safe%20hands" data-a2a-url="https://developers.redhat.com/blog/2019/05/22/openjdk-8-and-11-still-in-safe-hands/" data-a2a-title="OpenJDK 8 and 11: Still in safe hands"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/05/22/openjdk-8-and-11-still-in-safe-hands/"&gt;OpenJDK 8 and 11: Still in safe hands&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/D70ZAxenJUY" height="1" width="1" alt=""/&gt;</content><summary>In 2018, Oracle announced that it would only provide free public updates and auto-updates of Java SE 8 for commercial users until the end of January 2019. Java 8 is a very important platform, used by millions of programmers, so this was a big deal. The Java community needed to fill the gap. In February of this year, I was appointed as the new Lead of the OpenJDK 8 Update Releases Project. A couple...</summary><dc:creator>Andrew Haley</dc:creator><dc:date>2019-05-22T07:00:56Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/05/22/openjdk-8-and-11-still-in-safe-hands/</feedburner:origLink></entry><entry><title>4.1.0 released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/BIrYVF4gNk4/410-released.html" /><category term="feed_group_name_jgroups" scheme="searchisko:content:tags" /><category term="feed_name_belasblog" scheme="searchisko:content:tags" /><category term="graalvm quarkus network sniffers" scheme="searchisko:content:tags" /><author><name>Bela Ban</name></author><id>searchisko:content:id:jbossorg_blog-4_1_0_released</id><updated>2019-05-21T15:25:36Z</updated><published>2019-05-21T15:25:00Z</published><content type="html">I'm happy to announce that I just released JGroups 4.1.0!&lt;br /&gt;&lt;br /&gt;Why the bump to a new minor version?&lt;br /&gt;&lt;br /&gt;I had to make some API changes and - as I'm trying to avoid that in micro releases - I decided to bump the version to 4.1.0. The changes involve removing a few (rather exotic) JChannel constructors, but chances are you've never used any of them anyway. The other change is a signature change in Streamable, where I now throw IOExceptions and ClassNotFoundExceptions instead of simple Exceptions.&lt;br /&gt;&lt;br /&gt;Here's a list of the major changes:&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;&lt;a href="http://graalvm.org/"&gt;GraalVM&lt;/a&gt; / &lt;a href="http://www.quarkus.io/"&gt;Quarkus&lt;/a&gt; support&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;JGroups can now be compiled into a native executable using GraalVM's &lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;native-image&lt;/span&gt;. This is a very cool feature; I've used &lt;a href="https://github.com/belaban/JGroups/blob/master/tests/perf/org/jgroups/tests/perf/ProgrammaticUPerf2.java"&gt;ProgrammaticUPerf2&lt;/a&gt; to start a member in ~&lt;b&gt;1 millisecond&lt;/b&gt;!&lt;/li&gt;&lt;li&gt;This means JGroups can now be used by other applications to create native binaries. Not yet very polished, and I'll write a Quarkus extension next, but usable by folks who know GraalVM...&lt;/li&gt;&lt;li&gt;I'll blog about the port to GraalVM and the Quarkus extension (once it's ready) next, so stay tuned!&lt;/li&gt;&lt;li&gt;&lt;a href="https://issues.jboss.org/browse/JGRP-2332"&gt;https://issues.jboss.org/browse/JGRP-2332&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://issues.jboss.org/browse/JGRP-2341"&gt;https://issues.jboss.org/browse/JGRP-2341&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&amp;nbsp;Parsing of network packets&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;When using network sniffers, such as wireshark, tshark or tcpdump, the resulting PCAP files can be parsed by JGroups, displaying the contents of network packets as JGroups messages&lt;/li&gt;&lt;li&gt;This can be done &lt;b&gt;offline&lt;/b&gt; (e.g. reading a previously recorded PCAP file) or &lt;b&gt;online&lt;/b&gt; (e.g. by piping the output of tshark into JGroups).&lt;/li&gt;&lt;li&gt;I'll write a separate blog post about this shortly&lt;/li&gt;&lt;li&gt;&lt;a href="https://issues.jboss.org/browse/JGRP-2311"&gt;https://issues.jboss.org/browse/JGRP-2311&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Documentation: &lt;a href="http://www.jgroups.org/manual4/index.html#_analyzing_wire_format_packets"&gt;http://www.jgroups.org/manual4/index.html#_analyzing_wire_format_packets&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;Diagnostics handler without reflection&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;This is related to the GraalVM port: the default DiagnosticsHandler (used by probe.sh) uses reflection, which is not allowed in GraalVM&lt;/li&gt;&lt;li&gt;This additional DiagnosticsHandler can be used instead of the default one when creating a native binary of an application. The advantage is that probe.sh still works, even in a native binary.&lt;/li&gt;&lt;li&gt;&lt;a href="https://issues.jboss.org/browse/JGRP-2337"&gt;https://issues.jboss.org/browse/JGRP-2337&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;RpcDispatcher without reflection&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;This is similar to the above bullet item: since reflection is not allowed in the GraalVM at runtime, reflective calls by RpcDispatcher would have to be defined in a config file passed to &lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;native-image&lt;/span&gt;, when creating a native binary.&amp;nbsp; &lt;/li&gt;&lt;li&gt;I therefore added a way to invoke methods, without the need to use reflection&lt;/li&gt;&lt;li&gt;For details see &lt;a href="https://issues.jboss.org/browse/JGRP-2338"&gt;https://issues.jboss.org/browse/JGRP-2338&lt;/a&gt; or the documentation at &lt;a href="http://www.jgroups.org/manual4/index.html#_methodlookup_and_methoddispatcher"&gt;http://www.jgroups.org/manual4/index.html#_methodlookup_and_methoddispatcher&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&amp;nbsp;Probe: support when running under TCP&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Also required when running on GraalVM: since JGroups currently only supports TCP (MulticastSockets don't currently work on GraalVM), probe.sh needs to be given the address of *one* member, to fetch information about all members&lt;/li&gt;&lt;li&gt;&lt;a href="https://issues.jboss.org/browse/JGRP-2336"&gt;https://issues.jboss.org/browse/JGRP-2336&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&amp;nbsp;Change in how IPv4/IPv6 addresses are picked&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;The new algorithm centers around &lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;bind_addr&lt;/span&gt; defined in the transport (UDP, TCP, TCP_NIO2); the value of this address determines how other addresses (such as loopback, site_local, global, localhost or default values) are resolved.&lt;/li&gt;&lt;li&gt;Example: if &lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;bind_addr=::1&lt;/span&gt;, then all other addresses that are not explicitly defined will be IPv6. If &lt;span style="font-family: &amp;quot;Courier New&amp;quot;, Courier, monospace;"&gt;bind_addr=127.0.0.1&lt;/span&gt;, the all other addresses will be IPv4 addresses.&lt;/li&gt;&lt;li&gt;The advantage of this is that you can run a JGroups stack using IPv4 and another one using IPv6 &lt;i&gt;in the same process&lt;/i&gt;!&lt;/li&gt;&lt;li&gt;&lt;a href="https://issues.jboss.org/browse/JGRP-2343"&gt;https://issues.jboss.org/browse/JGRP-2343&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;A complete list of JIRA issues is at &lt;a href="https://issues.jboss.org/projects/JGRP/versions/12341388"&gt;https://issues.jboss.org/projects/JGRP/versions/12341388&lt;/a&gt;.&amp;nbsp;&lt;br /&gt;Please post questions/issues to the mailing list at &lt;a href="https://groups.google.com/forum/#!forum/jgroups-dev"&gt;https://groups.google.com/forum/#!forum/jgroups-dev&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Enjoy!&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/BIrYVF4gNk4" height="1" width="1" alt=""/&gt;</content><summary>I'm happy to announce that I just released JGroups 4.1.0! Why the bump to a new minor version? I had to make some API changes and - as I'm trying to avoid that in micro releases - I decided to bump the version to 4.1.0. The changes involve removing a few (rather exotic) JChannel constructors, but chances are you've never used any of them anyway. The other change is a signature change in Streamable...</summary><dc:creator>Bela Ban</dc:creator><dc:date>2019-05-21T15:25:00Z</dc:date><feedburner:origLink>http://belaban.blogspot.com/2019/05/410-released.html</feedburner:origLink></entry><entry><title>Byteman 4.0.7 has been released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/RmpkqU6A6m4/byteman-407-has-been-released.html" /><category term="feed_group_name_byteman" scheme="searchisko:content:tags" /><category term="feed_name_byteman" scheme="searchisko:content:tags" /><author><name>Andrew Dinn</name></author><id>searchisko:content:id:jbossorg_blog-byteman_4_0_7_has_been_released</id><updated>2019-05-21T09:46:00Z</updated><published>2019-05-21T09:46:00Z</published><content type="html">Byteman 4.0.7 is now available from the &lt;a href="http://www.jboss.org/byteman/downloads"&gt;Byteman downloads page&lt;/a&gt; and from the &lt;a href="https://oss.sonatype.org/index.html#nexus-search;quick%7Ebyteman"&gt;Maven Central repository&lt;/a&gt;. It is the latest update release for use on JDK9+ runtimes. It is also recommended as the preferred release for use on JDK8- runtimes.&lt;br /&gt;&lt;br /&gt;Byteman 4.0.7 is a maintenance release which includes a few minor bug fixes. More details are provided in the &lt;a href="http://downloads.jboss.org/byteman/latest/ReleaseNotes.txt"&gt;Release Notes&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/RmpkqU6A6m4" height="1" width="1" alt=""/&gt;</content><summary>Byteman 4.0.7 is now available from the Byteman downloads page and from the Maven Central repository. It is the latest update release for use on JDK9+ runtimes. It is also recommended as the preferred release for use on JDK8- runtimes. Byteman 4.0.7 is a maintenance release which includes a few minor bug fixes. More details are provided in the Release Notes.</summary><dc:creator>Andrew Dinn</dc:creator><dc:date>2019-05-21T09:46:00Z</dc:date><feedburner:origLink>http://bytemanblog.blogspot.com/2019/05/byteman-407-has-been-released.html</feedburner:origLink></entry></feed>
